#!/bin/bash
# NDI Bridge Device Name Setter
# Sets both hostname and NDI name in a unified way
# Usage: ndi-bridge-set-device-name <simple-name>

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Helper functions
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

# Check usage
if [ $# -eq 0 ]; then
    echo "Usage: ndi-bridge-set-device-name <simple-name>"
    echo ""
    echo "Example: ndi-bridge-set-device-name cam1"
    echo "         This will set:"
    echo "         - Hostname: ndi-bridge-cam1"
    echo "         - NDI Name: NDI Bridge Cam1"
    echo ""
    echo "Current settings:"
    echo "  Hostname: $(hostname)"
    if [ -f /etc/ndi-bridge/config ]; then
        current_ndi=$(grep "^NDI_NAME=" /etc/ndi-bridge/config | cut -d'"' -f2)
        if [ -z "$current_ndi" ]; then
            echo "  NDI Name: (using hostname)"
        else
            echo "  NDI Name: $current_ndi"
        fi
    fi
    exit 1
fi

# Validate input
SIMPLE_NAME="$1"

# Check if input contains only allowed characters (letters, numbers, hyphens)
if ! echo "$SIMPLE_NAME" | grep -qE '^[a-zA-Z0-9-]+$'; then
    error "Name must contain only letters, numbers, and hyphens"
fi

# Check length
if [ ${#SIMPLE_NAME} -gt 32 ]; then
    error "Name must be 32 characters or less"
fi

# Convert to lowercase for hostname
SIMPLE_NAME_LOWER=$(echo "$SIMPLE_NAME" | tr '[:upper:]' '[:lower:]')

# Create hostname with prefix
NEW_HOSTNAME="ndi-bridge-${SIMPLE_NAME_LOWER}"

# Create human-readable NDI name
# Convert to proper case and add spaces
NDI_NAME="NDI Bridge $(echo "$SIMPLE_NAME" | sed 's/\b\(.\)/\u\1/g')"

log "Setting device name..."
log "  Simple name: $SIMPLE_NAME"
log "  Hostname:    $NEW_HOSTNAME"
log "  NDI Name:    $NDI_NAME"

# Remount filesystem as read-write
log "Remounting filesystem as read-write..."
mount -o remount,rw / || error "Failed to remount filesystem"

# Update hostname files
log "Updating hostname..."
echo "$NEW_HOSTNAME" > /etc/hostname
sed -i "s/127.0.1.1.*/127.0.1.1 $NEW_HOSTNAME/" /etc/hosts

# Apply hostname immediately
hostname "$NEW_HOSTNAME"

# Update NDI configuration
log "Updating NDI configuration..."
if [ -f /etc/ndi-bridge/config ]; then
    sed -i "s/NDI_NAME=.*/NDI_NAME=\"$NDI_NAME\"/" /etc/ndi-bridge/config
else
    error "NDI configuration file not found at /etc/ndi-bridge/config"
fi

# Sync filesystem
sync

# Remount as read-only
log "Remounting filesystem as read-only..."
mount -o remount,ro / || warn "Failed to remount filesystem as read-only"

# Restart services for immediate visibility
log "Restarting services..."

# Restart Avahi daemon for mDNS/Bonjour discovery
if systemctl is-enabled avahi-daemon &>/dev/null; then
    log "  Restarting Avahi daemon..."
    systemctl restart avahi-daemon || warn "Failed to restart Avahi daemon"
    sleep 1
fi

# Restart NDI Bridge service
log "  Restarting NDI Bridge service..."
systemctl restart ndi-bridge || error "Failed to restart NDI Bridge service"

# Wait a moment for services to stabilize
sleep 2

# Verify changes
log "Verifying changes..."
log "  Current hostname: $(hostname)"

# Check if NDI service is running
if systemctl is-active ndi-bridge >/dev/null 2>&1; then
    log "  NDI Bridge service: Running"
else
    warn "  NDI Bridge service: Not running"
fi

# Show network information
if ip -4 addr show dev br0 2>/dev/null | grep -q inet; then
    IP_ADDR=$(ip -4 addr show dev br0 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | head -1)
    log "  Network address: $IP_ADDR"
    log ""
    log "Device should now be visible on the network as:"
    log "  - Hostname: $NEW_HOSTNAME (ping $NEW_HOSTNAME.local)"
    log "  - NDI Name: $NDI_NAME"
else
    warn "  No IP address found on br0 interface"
fi

log ""
log "Device name update complete!"
log "The NDI source should be immediately visible as '$NDI_NAME' in NDI applications."