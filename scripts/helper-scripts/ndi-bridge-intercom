#!/bin/bash

# Load configuration
CONFIG_FILE="/etc/ndi-bridge/intercom.conf"
if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
fi

# Default values if config doesn't exist
INTERCOM_ENABLED="${INTERCOM_ENABLED:-true}"
VDO_ROOM="${VDO_ROOM:-nl_interkom}"
VDO_SERVER="${VDO_SERVER:-https://vdo.ninja/alpha/}"
AUDIO_DEVICE="${AUDIO_DEVICE:-default}"

# Check if intercom is enabled
if [ "$INTERCOM_ENABLED" != "true" ]; then
    echo "Intercom is disabled in configuration"
    exit 0
fi

# Get hostname for device identification
HOSTNAME=$(hostname)

# Build VDO.Ninja URL with corrected parameters
VDO_URL="${VDO_SERVER}?room=${VDO_ROOM}&push=${HOSTNAME}&label=${HOSTNAME}&ad=${AUDIO_DEVICE}&novideo&autostart&webcam=0"

echo "Starting NDI Bridge Intercom"
echo "Room: $VDO_ROOM"
echo "Device: $HOSTNAME"
echo "Audio: $AUDIO_DEVICE"
echo "URL: $VDO_URL"

# Try different browser executables
BROWSER_CMD=""

# Check for actual chromium (not snap wrapper)
if [ -x /usr/lib/chromium-browser/chromium-browser ]; then
    BROWSER_CMD="/usr/lib/chromium-browser/chromium-browser"
elif [ -x /usr/bin/chromium ] && ! grep -q "snap" /usr/bin/chromium 2>/dev/null; then
    BROWSER_CMD="/usr/bin/chromium"
elif [ -x /usr/bin/google-chrome ]; then
    BROWSER_CMD="/usr/bin/google-chrome"
elif [ -x /usr/bin/google-chrome-stable ]; then
    BROWSER_CMD="/usr/bin/google-chrome-stable"
else
    # Fall back to chromium-browser but check if it's a snap wrapper
    if [ -x /usr/bin/chromium-browser ]; then
        if grep -q "snap install chromium" /usr/bin/chromium-browser 2>/dev/null; then
            echo "ERROR: Only snap version of chromium available"
            echo "Intercom feature requires a real browser installation"
            echo ""
            echo "To fix this, either:"
            echo "1. Install Google Chrome manually"
            echo "2. Use a different Ubuntu version with native chromium"
            echo "3. Wait for alternative WebRTC implementation"
            exit 1
        else
            BROWSER_CMD="/usr/bin/chromium-browser"
        fi
    else
        echo "ERROR: No suitable browser found"
        echo "Please install chromium or google-chrome"
        exit 1
    fi
fi

echo "Using browser: $BROWSER_CMD"

# Run browser in headless mode
# Direct URL loading for proper WebRTC connection
exec $BROWSER_CMD \
    --headless \
    --no-sandbox \
    --disable-setuid-sandbox \
    --disable-gpu \
    --disable-dev-shm-usage \
    --use-fake-ui-for-media-stream \
    --use-fake-device-for-media-stream \
    --autoplay-policy=no-user-gesture-required \
    --enable-logging=stderr \
    --log-level=1 \
    --disable-web-security \
    --allow-running-insecure-content \
    --disable-features=TranslateUI \
    --disable-ipc-flooding-protection \
    "${VDO_URL}"