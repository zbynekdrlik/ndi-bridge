#!/bin/bash
# NDI Bridge Device Name Setter
# Sets hostname, NDI name, and mDNS aliases
# Usage: ndi-bridge-set-name <simple-name>

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

# Helper functions
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

# Check if running as root
if [ "$EUID" -ne 0 ]; then 
    error "This script must be run as root"
fi

# Check arguments
if [ $# -ne 1 ]; then
    echo "Usage: $0 <device-name>"
    echo "Example: $0 cam1"
    echo ""
    echo "This will set:"
    echo "  - Hostname to: ndi-bridge-cam1"
    echo "  - Short alias: cam1.local"
    echo "  - NDI name to: cam1"
    exit 1
fi

# Validate name (alphanumeric, dash, underscore only)
NEW_NAME="$1"
if ! [[ "$NEW_NAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
    error "Device name must contain only letters, numbers, dashes, and underscores"
fi

# Convert to lowercase for consistency
NEW_NAME=$(echo "$NEW_NAME" | tr '[:upper:]' '[:lower:]')

# Build full hostname
FULL_HOSTNAME="ndi-bridge-${NEW_NAME}"

log "Setting device name to: $NEW_NAME"
log "Full hostname will be: $FULL_HOSTNAME"
log "Short alias will be: ${NEW_NAME}.local"

# Update hostname
echo "$FULL_HOSTNAME" > /etc/hostname
sed -i "s/127.0.1.1.*/127.0.1.1 $FULL_HOSTNAME $NEW_NAME/" /etc/hosts

# Update NDI configuration
sed -i "s/NDI_NAME=.*/NDI_NAME=\"$NEW_NAME\"/" /etc/media-bridge/config

# Update Avahi configuration with new hostname
if [ -f /etc/avahi/avahi-daemon.conf ]; then
    sed -i "s/^host-name=.*/host-name=$FULL_HOSTNAME/" /etc/avahi/avahi-daemon.conf
fi

# Create Avahi alias service for short name
mkdir -p /etc/avahi/services
cat > /etc/avahi/services/ndi-bridge-alias.service << EOFALIAS
<?xml version="1.0" standalone='no'?>
<!DOCTYPE service-group SYSTEM "avahi-service.dtd">
<service-group>
  <name>${NEW_NAME}</name>
  <service>
    <type>_device-info._tcp</type>
    <subtype>_ndi._sub._device-info._tcp</subtype>
    <port>0</port>
    <txt-record>model=NDI Bridge</txt-record>
    <txt-record>hostname=${FULL_HOSTNAME}</txt-record>
  </service>
</service-group>
EOFALIAS

# NOTE: NDI service advertisement is handled by the NDI Bridge application itself
# Remove any old NDI service file that might exist
rm -f /etc/avahi/services/ndi-bridge.service 2>/dev/null || true

# Update HTTP service advertisement with device name
cat > /etc/avahi/services/ndi-bridge-http.service << EOFHTTPSERVICE
<?xml version="1.0" standalone='no'?>
<!DOCTYPE service-group SYSTEM "avahi-service.dtd">
<service-group>
  <name>${NEW_NAME} Configuration</name>
  <service>
    <type>_http._tcp</type>
    <port>80</port>
    <txt-record>path=/</txt-record>
    <txt-record>product=NDI Bridge</txt-record>
    <txt-record>name=${NEW_NAME}</txt-record>
  </service>
</service-group>
EOFHTTPSERVICE

# Apply hostname immediately
hostname "$FULL_HOSTNAME"

# Restart NDI Bridge service to apply new name
log "Restarting NDI Capture service..."
systemctl restart ndi-capture

# Restart Intercom service to use new name in VDO.Ninja
if systemctl is-enabled --quiet ndi-bridge-intercom 2>/dev/null; then
    log "Restarting Intercom service with new name..."
    systemctl restart ndi-bridge-intercom
fi

# Restart Avahi to advertise new name and services
if systemctl is-active --quiet avahi-daemon; then
    log "Restarting Avahi daemon..."
    systemctl restart avahi-daemon
    
    # Create and start avahi-alias service for short hostname
    log "Setting up mDNS alias for ${NEW_NAME}.local..."
    
    # Kill any existing avahi-publish processes
    pkill -f "avahi-publish.*\.local" 2>/dev/null || true
    
    # Get the bridge IP
    BRIDGE_IP=$(ip -4 addr show br0 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | head -1)
    
    if [ -n "$BRIDGE_IP" ]; then
        # Create systemd service for persistent alias
        cat > /etc/systemd/system/avahi-alias.service << EOFALIASSERVICE
[Unit]
Description=Avahi mDNS hostname alias for ${NEW_NAME}
After=avahi-daemon.service network-online.target
Wants=avahi-daemon.service

[Service]
Type=simple
ExecStart=/usr/bin/avahi-publish -a -R ${NEW_NAME}.local ${BRIDGE_IP}
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOFALIASSERVICE
        
        systemctl daemon-reload
        systemctl enable avahi-alias.service
        systemctl restart avahi-alias.service
        
        log "mDNS alias service configured for ${NEW_NAME}.local -> ${BRIDGE_IP}"
    else
        warn "Could not determine bridge IP address, alias service not configured"
    fi
fi

# Show success
log "Device name successfully changed!"
echo ""
echo -e "${CYAN}Summary:${NC}"
echo "  Hostname:      $FULL_HOSTNAME"
echo "  Short alias:   ${NEW_NAME}.local"
echo "  NDI Name:      $NEW_NAME"
echo ""
echo -e "${CYAN}Network Access:${NC}"
echo "  - ping ${FULL_HOSTNAME}.local"
echo "  - ping ${NEW_NAME}.local"
echo ""
echo -e "${CYAN}Web Interface:${NC}"
echo "  - http://${FULL_HOSTNAME}.local"
echo "  - http://${NEW_NAME}.local"
echo "  Username: admin, Password: newlevel"
echo ""
echo "The device will now appear as '$NEW_NAME' in NDI sources."
echo "You may need to refresh your NDI receiver application."
