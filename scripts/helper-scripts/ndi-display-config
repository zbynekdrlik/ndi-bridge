#!/bin/bash
#
# Configure individual NDI display
#

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

# Check if running as root for service management
check_root() {
    if [ "$EUID" -ne 0 ] && [ "$1" = "apply" ]; then
        echo "Please run with sudo to apply configuration"
        exit 1
    fi
}

# Show usage
if [ $# -lt 1 ]; then
    echo "Usage: ndi-display-config <display-id>"
    echo "       ndi-display-config 0      # Configure display 0"
    echo "       ndi-display-config 1      # Configure display 1"
    echo "       ndi-display-config 2      # Configure display 2"
    echo ""
    echo "       ndi-display-config status # Show all displays status"
    exit 1
fi

# Handle status command
if [ "$1" = "status" ]; then
    /usr/local/bin/ndi-display status
    exit 0
fi

DISPLAY_ID=$1

# Validate display ID
if ! [[ "$DISPLAY_ID" =~ ^[0-2]$ ]]; then
    echo -e "${RED}Error: Display ID must be 0, 1, or 2${NC}"
    exit 1
fi

CONFIG_FILE="/etc/ndi-bridge/display-${DISPLAY_ID}.conf"
POLICY_FILE="/etc/ndi-bridge/display-policy.conf"

# Create config directory if it doesn't exist
if [ ! -d /etc/ndi-bridge ]; then
    sudo mkdir -p /etc/ndi-bridge
fi

# Load current configuration
CURRENT_STREAM=""
ENABLED="false"
if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
    CURRENT_STREAM="$STREAM_NAME"
fi

# Check console policy
CONSOLE_DISPLAY=0
if [ -f "$POLICY_FILE" ]; then
    source "$POLICY_FILE"
fi

# Check if display is currently running
SERVICE_STATUS="stopped"
if systemctl is-active --quiet ndi-display@${DISPLAY_ID}; then
    SERVICE_STATUS="running"
fi

# Show current status
echo -e "${CYAN}Configure Display ${DISPLAY_ID} (HDMI-$((DISPLAY_ID + 1)))${NC}"
echo "========================================"
echo ""

if [ "$DISPLAY_ID" = "$CONSOLE_DISPLAY" ]; then
    echo -e "${YELLOW}Note: This display is reserved for console${NC}"
    echo ""
fi

if [ -n "$CURRENT_STREAM" ]; then
    echo "Current configuration:"
    echo "  Stream: $CURRENT_STREAM"
    echo "  Service: $SERVICE_STATUS"
    echo ""
fi

# Check if console is active on this display
CONSOLE_ACTIVE=false
VTCON_PATH="/sys/class/vtconsole/vtcon${DISPLAY_ID}/bind"
if [ -f "$VTCON_PATH" ]; then
    if [ "$(cat $VTCON_PATH)" = "1" ]; then
        CONSOLE_ACTIVE=true
        echo -e "${YELLOW}Console is currently active on this display${NC}"
        echo ""
    fi
fi

# Show menu
echo "Available actions:"
echo "  1. Set NDI stream"
echo "  2. Clear configuration (disable)"
echo "  3. Keep as console display"
echo "  4. Show available NDI streams"
echo "  5. Exit"
echo ""

read -p "Select action (1-5): " ACTION

case "$ACTION" in
    1)
        # List available streams
        echo ""
        echo "Searching for NDI streams..."
        STREAMS=$(/usr/local/bin/ndi-display list 2>/dev/null | grep -E "^[0-9]+:" || true)
        
        if [ -z "$STREAMS" ]; then
            echo -e "${RED}No NDI streams found${NC}"
            exit 1
        fi
        
        echo ""
        echo "Available NDI streams:"
        echo "----------------------"
        echo "$STREAMS"
        echo ""
        echo "Enter stream name exactly as shown above"
        echo "(or press Enter to cancel)"
        echo ""
        read -p "Stream name: " NEW_STREAM
        
        if [ -z "$NEW_STREAM" ]; then
            echo "Cancelled"
            exit 0
        fi
        
        # Confirm configuration
        echo ""
        echo "Configuration summary:"
        echo "  Display: ${DISPLAY_ID} (HDMI-$((DISPLAY_ID + 1)))"
        echo "  Stream: $NEW_STREAM"
        
        if [ "$CONSOLE_ACTIVE" = "true" ]; then
            echo -e "  ${YELLOW}Console will be disabled on this display${NC}"
        fi
        
        echo ""
        read -p "Apply this configuration? (y/n): " CONFIRM
        
        if [ "$CONFIRM" != "y" ]; then
            echo "Cancelled"
            exit 0
        fi
        
        # Write configuration
        check_root apply
        
        cat > "$CONFIG_FILE" << EOF
# NDI Display ${DISPLAY_ID} Configuration
STREAM_NAME="$NEW_STREAM"
DISPLAY_ID=${DISPLAY_ID}
ENABLED=true
EOF
        
        # Stop service if running
        if [ "$SERVICE_STATUS" = "running" ]; then
            echo "Stopping current stream..."
            sudo systemctl stop ndi-display@${DISPLAY_ID}
        fi
        
        # Disable console if needed
        if [ "$CONSOLE_ACTIVE" = "true" ]; then
            echo "Disabling console on display ${DISPLAY_ID}..."
            sudo /usr/local/bin/ndi-display-console-manager disable ${DISPLAY_ID}
        fi
        
        # Start service
        echo "Starting NDI display service..."
        sudo systemctl enable ndi-display@${DISPLAY_ID}
        sudo systemctl start ndi-display@${DISPLAY_ID}
        
        echo -e "${GREEN}Configuration applied successfully!${NC}"
        echo ""
        echo "Check status with: ndi-display-config status"
        ;;
        
    2)
        # Clear configuration
        check_root apply
        
        if [ "$SERVICE_STATUS" = "running" ]; then
            echo "Stopping NDI display service..."
            sudo systemctl stop ndi-display@${DISPLAY_ID}
        fi
        
        sudo systemctl disable ndi-display@${DISPLAY_ID} 2>/dev/null || true
        
        if [ -f "$CONFIG_FILE" ]; then
            sudo rm "$CONFIG_FILE"
        fi
        
        echo -e "${GREEN}Configuration cleared${NC}"
        ;;
        
    3)
        # Keep as console
        check_root apply
        
        if [ "$SERVICE_STATUS" = "running" ]; then
            echo "Stopping NDI display service..."
            sudo systemctl stop ndi-display@${DISPLAY_ID}
            sudo systemctl disable ndi-display@${DISPLAY_ID}
        fi
        
        if [ "$CONSOLE_ACTIVE" = "false" ]; then
            echo "Enabling console on display ${DISPLAY_ID}..."
            sudo /usr/local/bin/ndi-display-console-manager enable ${DISPLAY_ID}
        fi
        
        # Update policy file
        sudo sed -i "s/CONSOLE_DISPLAY=.*/CONSOLE_DISPLAY=${DISPLAY_ID}/" "$POLICY_FILE" 2>/dev/null || \
            echo "CONSOLE_DISPLAY=${DISPLAY_ID}" | sudo tee "$POLICY_FILE" > /dev/null
        
        echo -e "${GREEN}Display ${DISPLAY_ID} set as console display${NC}"
        ;;
        
    4)
        # Just show streams
        echo ""
        /usr/local/bin/ndi-display list
        ;;
        
    5)
        echo "Exiting"
        exit 0
        ;;
        
    *)
        echo -e "${RED}Invalid selection${NC}"
        exit 1
        ;;
esac