# Statime Configuration for Dante PTP Follower Mode
# IMPORTANT: ndi-bridge must be a clock SLAVE in the Dante network
# The PTP master should be a real Dante device (console, dedicated clock, etc.)

[ptp]
# Interface to use for PTP
interface = "br0"

# PTP domain (Dante uses domain 0)
domain = 0

# CRITICAL: Set as FOLLOWER/SLAVE only
# Never allow this device to become PTP master
priority1 = 255  # Lowest priority - never become master
priority2 = 255  # Lowest priority - never become master
clock_class = 255  # Slave-only clock class

# CRITICAL: Dante uses PTPv1 (NOT PTPv2!)
# This requires the Inferno fork of Statime (teodly/statime:inferno-dev)
# Upstream Statime only supports PTPv2 which is incompatible
transport = "ipv4"  # Dante uses IPv4 multicast
delay_mechanism = "e2e"  # End-to-end delay mechanism

# Announce receipt timeout (in announce intervals)
announce_receipt_timeout = 3

# Sync interval (log2 seconds, 0 = 1 second)
sync_interval = 0

# Announce interval (log2 seconds, 1 = 2 seconds)
announce_interval = 1

# Delay request interval (log2 seconds)
delay_req_interval = 0

[clock]
# Clock servo configuration for following the master
# These values tune how aggressively we follow the master clock

# Proportional-Integral servo constants
servo_pi_proportional = 0.7
servo_pi_integral = 0.3

# Maximum frequency adjustment (parts per million)
max_frequency = 900000

# Step threshold - if offset is larger, step the clock
step_threshold = 0.0001  # 100 microseconds

# First step threshold - more aggressive on startup
first_step_threshold = 0.00002  # 20 microseconds

[logging]
# Logging configuration
level = "info"
destination = "syslog"

# Show clock sync statistics
statistics_interval = 10