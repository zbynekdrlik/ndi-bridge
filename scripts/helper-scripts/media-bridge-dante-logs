#!/bin/bash
# Dante Bridge Log Viewer
# Shows detailed logs from all Dante-related services

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

# Parse arguments
FOLLOW=false
LINES=50
SERVICE=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -f|--follow)
            FOLLOW=true
            shift
            ;;
        -n|--lines)
            LINES="$2"
            shift 2
            ;;
        -s|--service)
            SERVICE="$2"
            shift 2
            ;;
        -h|--help)
            echo "Dante Bridge Log Viewer"
            echo ""
            echo "Usage: $0 [OPTIONS]"
            echo ""
            echo "Options:"
            echo "  -f, --follow       Follow log output (like tail -f)"
            echo "  -n, --lines NUM    Show NUM lines (default: 50)"
            echo "  -s, --service SVC  Show only specific service:"
            echo "                     statime, dante-bridge, pipewire, all"
            echo "  -h, --help         Show this help message"
            echo ""
            echo "Examples:"
            echo "  $0                 # Show recent logs"
            echo "  $0 -f              # Follow logs in real-time"
            echo "  $0 -n 100          # Show last 100 lines"
            echo "  $0 -s statime      # Show only Statime PTP logs"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use -h for help"
            exit 1
            ;;
    esac
done

# Header
echo -e "${CYAN}╔══════════════════════════════════════════════════════════════╗${NC}"
echo -e "${CYAN}║              Dante Audio Bridge Logs                        ║${NC}"
echo -e "${CYAN}╚══════════════════════════════════════════════════════════════╝${NC}"
echo

# Function to show logs for a specific service
show_service_logs() {
    local service=$1
    local display_name=$2
    local color=$3
    
    echo -e "${color}▶ $display_name Logs:${NC}"
    echo -e "${color}$(printf '─%.0s' {1..60})${NC}"
    
    if [ "$FOLLOW" = true ]; then
        journalctl -u "$service" -f --no-pager | while IFS= read -r line; do
            # Color-code log levels
            if echo "$line" | grep -qE "ERROR|FATAL|CRITICAL"; then
                echo -e "${RED}$line${NC}"
            elif echo "$line" | grep -qE "WARN|WARNING"; then
                echo -e "${YELLOW}$line${NC}"
            elif echo "$line" | grep -qE "INFO|NOTICE"; then
                echo -e "${GREEN}$line${NC}"
            elif echo "$line" | grep -qE "DEBUG"; then
                echo -e "${CYAN}$line${NC}"
            else
                echo "$line"
            fi
        done
    else
        journalctl -u "$service" -n "$LINES" --no-pager | while IFS= read -r line; do
            # Color-code log levels
            if echo "$line" | grep -qE "ERROR|FATAL|CRITICAL"; then
                echo -e "${RED}$line${NC}"
            elif echo "$line" | grep -qE "WARN|WARNING"; then
                echo -e "${YELLOW}$line${NC}"
            elif echo "$line" | grep -qE "INFO|NOTICE"; then
                echo -e "${GREEN}$line${NC}"
            elif echo "$line" | grep -qE "DEBUG"; then
                echo -e "${CYAN}$line${NC}"
            else
                echo "$line"
            fi
        done
    fi
    echo
}

# Show specific service or all
case "$SERVICE" in
    statime)
        show_service_logs "statime.service" "Statime PTP Daemon" "$BLUE"
        ;;
    dante-bridge|dante)
        show_service_logs "dante-bridge.service" "Dante Audio Bridge" "$GREEN"
        ;;
    pipewire)
        show_service_logs "pipewire.service" "PipeWire Audio Server" "$MAGENTA"
        ;;
    all|"")
        if [ "$FOLLOW" = true ]; then
            # For follow mode with all services, use journalctl multi-unit feature
            echo -e "${YELLOW}Following all Dante-related services...${NC}"
            echo -e "${YELLOW}Press Ctrl+C to stop${NC}"
            echo
            journalctl -u statime.service -u dante-bridge.service -u pipewire.service -u wireplumber.service -f --no-pager | while IFS= read -r line; do
                # Color-code by service
                if echo "$line" | grep -q "statime"; then
                    PREFIX="${BLUE}[STATIME]${NC}"
                elif echo "$line" | grep -q "dante-bridge"; then
                    PREFIX="${GREEN}[DANTE]${NC}"
                elif echo "$line" | grep -q "pipewire"; then
                    PREFIX="${MAGENTA}[PIPEWIRE]${NC}"
                elif echo "$line" | grep -q "wireplumber"; then
                    PREFIX="${CYAN}[WIREPLUMBER]${NC}"
                else
                    PREFIX=""
                fi
                
                # Color-code log levels
                if echo "$line" | grep -qE "ERROR|FATAL|CRITICAL"; then
                    echo -e "$PREFIX ${RED}$line${NC}"
                elif echo "$line" | grep -qE "WARN|WARNING"; then
                    echo -e "$PREFIX ${YELLOW}$line${NC}"
                elif echo "$line" | grep -qE "INFO|NOTICE"; then
                    echo -e "$PREFIX ${GREEN}$line${NC}"
                elif echo "$line" | grep -qE "DEBUG"; then
                    echo -e "$PREFIX ${CYAN}$line${NC}"
                else
                    echo -e "$PREFIX $line"
                fi
            done
        else
            # Show logs from each service
            show_service_logs "statime.service" "Statime PTP Daemon" "$BLUE"
            show_service_logs "dante-bridge.service" "Dante Audio Bridge" "$GREEN"
            show_service_logs "pipewire.service" "PipeWire Audio Server" "$MAGENTA"
            show_service_logs "wireplumber.service" "WirePlumber Session Manager" "$CYAN"
            
            # Show any error messages from kernel about audio
            echo -e "${RED}▶ Kernel Audio Errors:${NC}"
            echo -e "${RED}$(printf '─%.0s' {1..60})${NC}"
            dmesg | grep -E "audio|ALSA|snd|usb.*Audio" | tail -"$LINES" | while IFS= read -r line; do
                if echo "$line" | grep -qE "error|fail|timeout"; then
                    echo -e "${RED}$line${NC}"
                else
                    echo "$line"
                fi
            done
        fi
        ;;
    *)
        echo -e "${RED}Unknown service: $SERVICE${NC}"
        echo "Valid services: statime, dante-bridge, pipewire, all"
        exit 1
        ;;
esac

# Footer for non-follow mode
if [ "$FOLLOW" != true ]; then
    echo
    echo -e "${CYAN}╔══════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${CYAN}║ Tips:                                                        ║${NC}"
    echo -e "${CYAN}║   Use -f to follow logs in real-time                        ║${NC}"
    echo -e "${CYAN}║   Use -n 100 to show more lines                             ║${NC}"
    echo -e "${CYAN}║   Use -s statime to show only PTP logs                      ║${NC}"
    echo -e "${CYAN}╚══════════════════════════════════════════════════════════════╝${NC}"
fi