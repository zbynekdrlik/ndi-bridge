#!/bin/bash
# NDI Bridge Status Collector
# Runs as a service to collect metrics for the welcome screen

# Create runtime directory
mkdir -p /var/run/ndi-bridge

# Main collection loop
while true; do
    # 1. Get current FPS from last metrics entry
    METRICS=$(journalctl -u ndi-bridge -n 200 --no-pager 2>/dev/null | grep "METRICS|" | tail -1)
    if [ -n "$METRICS" ]; then
        FPS=$(echo "$METRICS" | sed -n 's/.*FPS:\([0-9.]*\).*/\1/p')
        FRAMES=$(echo "$METRICS" | sed -n 's/.*FRAMES:\([0-9]*\).*/\1/p')
        DROPPED=$(echo "$METRICS" | sed -n 's/.*DROPPED:\([0-9]*\).*/\1/p')
        LATENCY=$(echo "$METRICS" | sed -n 's/.*LATENCY:\([0-9.]*\).*/\1/p')
        
        echo "$FPS" > /var/run/ndi-bridge/fps_current
        echo "$FRAMES" > /var/run/ndi-bridge/frames_total
        echo "$DROPPED" > /var/run/ndi-bridge/frames_dropped
        [ -n "$LATENCY" ] && echo "$LATENCY" > /var/run/ndi-bridge/latency_ms
    fi
    
    # 2. Get 10-minute FPS history and calculate average
    FPS_HISTORY=$(journalctl -u ndi-bridge --since "10 minutes ago" --no-pager 2>/dev/null | grep "METRICS|" | sed -n 's/.*FPS:\([0-9.]*\).*/\1/p')
    if [ -n "$FPS_HISTORY" ]; then
        # Calculate average
        AVG_FPS=$(echo "$FPS_HISTORY" | awk '{sum+=$1; count++} END {if(count>0) printf "%.2f", sum/count; else print "0"}')
        echo "$AVG_FPS" > /var/run/ndi-bridge/fps_10min_avg
        
        # Find min/max
        MIN_FPS=$(echo "$FPS_HISTORY" | sort -n | head -1)
        MAX_FPS=$(echo "$FPS_HISTORY" | sort -n | tail -1)
        echo "$MIN_FPS" > /var/run/ndi-bridge/fps_10min_min
        echo "$MAX_FPS" > /var/run/ndi-bridge/fps_10min_max
        
        # Count issues (FPS < 55)
        ISSUES=$(echo "$FPS_HISTORY" | awk '$1 < 55' | wc -l)
        echo "$ISSUES" > /var/run/ndi-bridge/fps_issues
    fi
    
    # 3. Monitor network TX rate on br0
    if [ -f /sys/class/net/br0/statistics/tx_bytes ]; then
        TX_BYTES_1=$(cat /sys/class/net/br0/statistics/tx_bytes)
        sleep 1
        TX_BYTES_2=$(cat /sys/class/net/br0/statistics/tx_bytes)
        
        # Calculate Mbps
        BYTES_DIFF=$((TX_BYTES_2 - TX_BYTES_1))
        MBPS=$(echo "scale=1; $BYTES_DIFF * 8 / 1000000" | bc 2>/dev/null || echo "0")
        echo "$MBPS" > /var/run/ndi-bridge/network_mbps
    else
        echo "0" > /var/run/ndi-bridge/network_mbps
    fi
    
    # 4. Check capture state
    if systemctl is-active --quiet ndi-bridge; then
        # Check if actually capturing (has recent metrics)
        LAST_METRIC_TIME=$(journalctl -u ndi-bridge -n 1 --no-pager 2>/dev/null | grep "METRICS|" | head -1 | cut -d' ' -f1-3)
        if [ -n "$LAST_METRIC_TIME" ]; then
            # Check if metric is recent (within last 5 seconds)
            LAST_EPOCH=$(date -d "$LAST_METRIC_TIME" +%s 2>/dev/null || echo "0")
            NOW_EPOCH=$(date +%s)
            DIFF=$((NOW_EPOCH - LAST_EPOCH))
            
            if [ "$DIFF" -lt 5 ]; then
                echo "CAPTURING" > /var/run/ndi-bridge/capture_state
            else
                echo "IDLE" > /var/run/ndi-bridge/capture_state
            fi
        else
            echo "STARTING" > /var/run/ndi-bridge/capture_state
        fi
    else
        echo "STOPPED" > /var/run/ndi-bridge/capture_state
    fi
    
    # 5. Get NDI stream name from config
    if [ -f /etc/ndi-bridge/config ]; then
        source /etc/ndi-bridge/config
        echo "$NDI_NAME" > /var/run/ndi-bridge/stream_name
    fi
    
    # Wait before next collection (total loop ~2 seconds)
    sleep 1
done