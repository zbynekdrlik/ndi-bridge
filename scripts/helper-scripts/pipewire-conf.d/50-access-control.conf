# PipeWire Access Control Configuration
# Implements device filtering without requiring WirePlumber

context.modules = [
    # Load the access module with rules
    {
        name = libpipewire-module-access
        flags = [ nofail ]
        args = {
            # Default to restricted access
            access.default = restricted
            
            # Force specific clients to restricted mode
            access.force = [
                # Chrome and Chromium browsers
                { application.name = "~.*[Cc]hrome.*" access = "restricted" }
                { application.process.binary = "~.*chrome.*" access = "restricted" }
                { application.process.binary = "~.*chromium.*" access = "restricted" }
            ]
            
            # Allow full access for PipeWire management tools
            access.allowed = [
                { application.name = "~pw-.*" access = "unrestricted" }
                { application.name = "~pactl.*" access = "unrestricted" }
                { application.name = "~pavucontrol.*" access = "unrestricted" }
                { application.name = "~media-bridge-.*" access = "unrestricted" }
            ]
        }
    }
    
    # Load the client-node module to create restricted nodes
    {
        name = libpipewire-module-client-node
        args = {
            # Create nodes that Chrome can access
            node.autoconnect = false
            node.exclusive = true
        }
    }
]

# Update properties for Chrome clients
context.properties.rules = [
    {
        matches = [
            { application.name = "~.*[Cc]hrome.*" }
            { application.process.binary = "~.*chrome.*" }
        ]
        actions = {
            update-props = {
                # Mark as restricted client
                pipewire.access = "restricted"
                media.role = "browser"
                
                # Set default permissions (read-only for most objects)
                default.permissions = "r---"
                
                # Can only see and use virtual devices
                node.access = "virtual"
            }
        }
    }
]

# Device visibility rules
device.rules = [
    {
        matches = [
            # Hardware devices
            { device.name = "~alsa_card.*" }
            { device.name = "~.*usb.*" }
            { device.name = "~.*USB.*" }
            { device.name = "~.*hdmi.*" }
            { device.name = "~.*HDMI.*" }
        ]
        actions = {
            update-props = {
                # Hide from restricted clients
                device.access = "unrestricted-only"
                object.permissions.restricted = "---"
            }
        }
    }
    {
        matches = [
            # Virtual devices
            { device.name = "~.*intercom.*" }
            { node.name = "~.*intercom.*" }
        ]
        actions = {
            update-props = {
                # Allow restricted clients to see these
                device.access = "all"
                object.permissions.restricted = "rwx"
            }
        }
    }
]

# Node visibility rules
node.rules = [
    {
        matches = [
            # Hardware audio nodes
            { node.name = "~alsa_.*" }
            { node.name = "~.*usb.*" }
            { node.name = "~.*USB.*" }
            { node.name = "~.*CSCTEK.*" }
            { node.name = "~.*hdmi.*" }
            { node.name = "~.*HDMI.*" }
        ]
        actions = {
            update-props = {
                # Hide from restricted clients
                node.access = "unrestricted-only"
                object.permissions.restricted = "---"
            }
        }
    }
    {
        matches = [
            # Virtual intercom devices
            { node.name = "intercom-speaker" }
            { node.name = "intercom-microphone" }
            { node.name = "intercom-mic-sink" }
        ]
        actions = {
            update-props = {
                # Allow restricted clients full access
                node.access = "all"
                object.permissions.restricted = "rwx"
            }
        }
    }
]