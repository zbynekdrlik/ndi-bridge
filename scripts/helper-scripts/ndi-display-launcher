#!/bin/bash
#
# Launcher script for ndi-display systemd service
# Properly handles environment variables with spaces in stream names
# Checks ENABLED parameter to determine if display should run
# Manages console state based on configuration
#

DISPLAY_ID=$1
CONFIG_FILE="/etc/media-bridge/display-${DISPLAY_ID}.conf"
VTCON_PATH="/sys/class/vtconsole/vtcon${DISPLAY_ID}/bind"

if [ -z "$DISPLAY_ID" ]; then
    echo "Error: Display ID not provided"
    exit 1
fi

# No config = no NDI display, ensure console is enabled (exit cleanly)
if [ ! -f "$CONFIG_FILE" ]; then
    echo "No configuration for display $DISPLAY_ID, skipping"
    # Make sure console is enabled on this display
    if [ -f "$VTCON_PATH" ] && [ "$(cat $VTCON_PATH)" = "0" ]; then
        echo "Re-enabling console on display $DISPLAY_ID"
        /usr/local/bin/ndi-display-console-manager enable ${DISPLAY_ID} 2>&1 || true
    fi
    exit 0
fi

# Source the configuration file to get STREAM_NAME and ENABLED
source "$CONFIG_FILE"

# Check if explicitly disabled - ensure console is enabled
if [ "${ENABLED}" = "false" ]; then
    echo "Display $DISPLAY_ID is disabled in configuration"
    # Make sure console is enabled on this display
    if [ -f "$VTCON_PATH" ] && [ "$(cat $VTCON_PATH)" = "0" ]; then
        echo "Re-enabling console on display $DISPLAY_ID"
        /usr/local/bin/ndi-display-console-manager enable ${DISPLAY_ID} 2>&1 || true
    fi
    exit 0
fi

# No stream configured = no NDI display, ensure console is enabled (exit cleanly)
if [ -z "$STREAM_NAME" ]; then
    echo "No stream name configured for display $DISPLAY_ID, skipping"
    # Make sure console is enabled on this display
    if [ -f "$VTCON_PATH" ] && [ "$(cat $VTCON_PATH)" = "0" ]; then
        echo "Re-enabling console on display $DISPLAY_ID"
        /usr/local/bin/ndi-display-console-manager enable ${DISPLAY_ID} 2>&1 || true
    fi
    exit 0
fi

# We have a valid config and it's enabled - disable console if needed
if [ -f "$VTCON_PATH" ] && [ "$(cat $VTCON_PATH)" = "1" ]; then
    echo "Console is active on display ${DISPLAY_ID}, disabling it for NDI..."
    /usr/local/bin/ndi-display-console-manager disable ${DISPLAY_ID} 2>&1 || true
fi

# Launch ndi-display with proper quoting to handle spaces
echo "Starting NDI display $DISPLAY_ID with stream: $STREAM_NAME"
exec /opt/media-bridge/ndi-display "$STREAM_NAME" $DISPLAY_ID