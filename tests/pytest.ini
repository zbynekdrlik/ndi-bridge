[pytest]
# Pytest configuration for NDI Bridge testing

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Default command line options
addopts = 
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Stop on first failure in CI (remove for local development)
    --maxfail=1
    # Timeout for each test (seconds)
    --timeout=30
    # Capture output
    --capture=no
    # Show test durations
    --durations=10
    # Strict markers
    --strict-markers
    # Generate HTML report
    --html=test-report.html
    --self-contained-html

# Test markers for organization
markers =
    critical: Critical tests that must pass (core services)
    capture: Tests for NDI capture functionality
    display: Tests for NDI display functionality
    audio: Tests for audio subsystem
    network: Tests for network configuration
    web: Tests for web interface
    timesync: Tests for time synchronization (PTP/NTP)
    helpers: Tests for helper scripts
    integration: Integration tests for multi-component interactions
    system: System-level end-to-end tests
    performance: Performance and benchmark tests
    slow: Tests that take more than 5 seconds
    requires_usb: Tests that require USB devices connected
    requires_reboot: Tests that require system reboot
    destructive: Tests that modify system configuration

# Test paths
testpaths = tests

# Ignore paths
norecursedirs = .git .tox dist build *.egg scripts

# Console output
console_output_style = progress

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
[coverage:run]
source = tests
omit = 
    */site-packages/*
    */tests/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: